// 1. Najprej definiramo razred Task
class Task {
	constructor(text) {
		this.text = text;
		this.prioriteta = prioriteta;
		this.done = false;
	}
	// toggleDone() — obrne stanje done (true ↔ false)

	// 🔹 this pomeni »ta trenutni objekt« (ta naloga).
	toggleDone() {
		this.done = !this.done;
	}
}

// 2. Shranimo vse naloge v seznam
let tasks = [];

//   Pazimo, da začnemo delati šele, ko je HTML že naložen (da lahko dostopamo do gumbov, inputov...).
document.addEventListener("DOMContentLoaded", () => {
	const vnos = document.getElementById("vnos");
	const dodaj = document.getElementById("dodaj");
	const prioriteta = document.getElementById("prioriteta");
	const seznam = document.getElementById("seznam");
	/*
	const pocisti = document.getElementById("pocisti");
	///*/

	/*
	 */

	// prioriteta.addEventListener("change", (e) => {
	// 	localStorage.setItem("prioriteta", e.target.value);
	// });

	loadFromLocalStorage();
	renderTasks();

	dodaj.addEventListener("click", () => {
		if (vnos.value.trim() === "") return; //če je prazen

		//
		readFromLocalStorage();
		//
		// Uporabimo razred Task za novo nalogo
		tasks.push(new Task(vnos.value, prioriteta.value));
		vnos.value = ""; ///počistimo polje za input
		saveToLocalStorage();
		renderTasks();
		/*
		 */
		/*
		 */
	});

	function renderTasks() {
		seznam.innerHTML = "";
		tasks.forEach((task, index) => {
			// preverimo prioriteto
			console.log("task:", task);
			// preverimo prioriteto
			const li = document.createElement("li");
			li.innerHTML = `
           	<span class="${task.done ? "done" : ""}">
				${task.text} (${task.prioriteta.value})
			</span>
            <div>
              <button onclick="toggleTask(${index})">✔</button>
              <button onclick="removeTask(${index})">🗑</button>
            </div>
          `;
			seznam.appendChild(li);
		});
	}
	// Ker morata biti funkciji vidni v HTML gumbih (onclick="..."), ju damo na window.
	window.removeTask = (index) => {
		tasks.splice(index, 1);
		saveToLocalStorage();
		renderTasks();
		readFromLocalStorage();
	};

	window.toggleTask = (index) => {
		tasks[index].toggleDone(); // Namesto neposrednega spreminjanja kličemo metodo razreda!
		saveToLocalStorage();
		renderTasks();
		readFromLocalStorage();
	};

	function saveToLocalStorage() {
		localStorage.setItem("todo-tasks", JSON.stringify(tasks));
		///

		// readFromLocalStorage();

		///
	}

	function loadFromLocalStorage() {
		const podatki = localStorage.getItem("todo-tasks");
		if (podatki) {
			const parsed = JSON.parse(podatki);
			
			// Ker se shrani kot običajen objekt, pretvorimo nazaj v Task
			tasks = parsed.map((obj) => {
				const task = new Task(obj.text, obj.prioriteta);
				task.done = obj.done;
				return task;
			});
		}
	}
});

function readFromLocalStorage(para = 0) {
	if (para === "pocisti") {
		localStorage.clear();
	}
	console.log(localStorage);
}
